Train start !
# of batch: 567, # of user: 84989, batch size: 150, lr: 0.0001, embedding dim: 300, history_length: 100
training 1 epoch batches:   0%|           | 0/1 [00:00<?, ?it/s]
training 1 epoch batches: 100%|███| 1/1 [00:52<00:00, 52.72s/it]


































































































































































































































































Traceback (most recent call last):
  File "model/main_for_1hop_7w.py", line 443, in <module>
    main()
  File "model/main_for_1hop_7w.py", line 358, in main
    history_length
  File "/home/user/pyo/Rec-with-TKG/model/GCRNN.py", line 391, in inference
    ent_embs = self.seq_GCRNN_batch(g, sub_g, latest_train_time, seed_list, history_length)   # (batch_size, emb_dim)
  File "/home/user/pyo/Rec-with-TKG/model/GCRNN.py", line 181, in seq_GCRNN_batch
    g.ndata['node_emb'][self.user_num:] = self.News_Encoder(self.all_news_ids)
  File "/home/user/pyo/Rec-with-TKG/model/GCRNN.py", line 93, in News_Encoder
    nv = self.news_encoder(title_tensor, category_idx, subcategory_idx)  # shape: (1, num_filters) 가 되도록 내부 처리
  File "/home/user/anaconda3/envs/pio/lib/python3.6/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/user/pyo/Rec-with-TKG/utils/full_news_encoder.py", line 68, in forward
    convoluted_title_vector = self.title_CNN(
  File "/home/user/anaconda3/envs/pio/lib/python3.6/site-packages/torch/nn/modules/module.py", line 1164, in __getattr__
    def __getattr__(self, name: str) -> Union[Tensor, 'Module']:
TypeError: keyboard_interrupt_handler() takes 1 positional argument but 2 were given